;; (require 'term)
(defun ly:initialize-ansi-term ()
  (setq term-prompt-regexp "^[^#$%>\n]*[#$%>] *")
  (setq tab-width 4)
  (setq term-default-fg-color (face-foreground 'default)
        term-default-bg-color (face-background 'default))
  ;; (define-key term-mode-map "\C-i" 'term-dynamic-complete)
  ;; (define-key term-raw-map "\C-c\C-c" 'my-term-line-char-switch)
  ;; (define-key term-raw-map "\C-x\C-v" '(lambda ()(interactive)(ansi-term "/bin/bash")))
  (define-key term-raw-map (kbd "C-m") 'ly:term-emulate-return)
  (define-key term-raw-map (kbd "M-x") (lookup-key global-map (kbd "M-x")))
  (define-key term-raw-map (kbd "C-q") (lookup-key global-map (kbd "C-q")))
  (when (featurep 'elscreen)
    (define-key term-raw-map (kbd "C-t") (lookup-key global-map (kbd "C-t")))))
(add-hook 'term-mode-hook 'ly:initialize-ansi-term)

(defun my-term-line-char-switch()
  (interactive)
  (if (term-in-line-mode) (term-char-mode)
    (if (term-in-char-mode) (term-line-mode))))

(defun ly:term-emulate-return ()
  (interactive)
  (term-send-raw-string (kbd "C-j")))
